(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{349:function(t,s,v){"use strict";v.r(s);var _=v(14),r=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[t._v("#")]),t._v(" Redis")]),t._v(" "),s("p",[t._v("TODO")]),t._v(" "),s("p",[t._v("获取锁失败处理（自旋）")]),t._v(" "),s("p",[t._v("删除别人的锁（只删除自己的锁）\n锁续期（redission）\n主从切换锁丢失（zk）")]),t._v(" "),s("p",[t._v("redlock（超过半数 redis 节点加锁成功）")]),t._v(" "),s("p",[t._v("分段锁")]),t._v(" "),s("p",[t._v("lock := redisson.lock(id)\nlock.Lock()\ntry {\n// do"),s("br"),t._v("\n} catch {\nlock.Unlock()\n}")]),t._v(" "),s("h3",{attrs:{id:"缓存击穿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存击穿"}},[t._v("#")]),t._v(" 缓存击穿")]),t._v(" "),s("h3",{attrs:{id:"缓存雪崩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存雪崩"}},[t._v("#")]),t._v(" 缓存雪崩")]),t._v(" "),s("p",[t._v("百万并发，redis坑不住，导致应用挂掉")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("ul",[s("li",[t._v("多级缓存（本地内存缓存） > redis缓存")])]),t._v(" "),s("h3",{attrs:{id:"缓存数据库双写不一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存数据库双写不一致"}},[t._v("#")]),t._v(" 缓存数据库双写不一致")]),t._v(" "),s("p",[t._v("更新和查询带来的不一致，停顿等原因导致线程3，过了一会儿才更新缓存")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("ul",[s("li",[t._v("过期时间（接受短期不一致）")]),t._v(" "),s("li",[t._v("延迟双删（接受短期不一致）")]),t._v(" "),s("li",[t._v("分布式锁（串行化）")]),t._v(" "),s("li",[t._v("读写锁（读多写少，性能优化）")]),t._v(" "),s("li",[t._v("强制读主库")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://fastly.jsdelivr.net/gh/caijinlin/imgcdn/image-20230607205820037.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);