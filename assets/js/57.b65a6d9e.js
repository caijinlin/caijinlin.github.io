(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{327:function(v,_,o){"use strict";o.r(_);var l=o(14),i=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h3",{attrs:{id:"基础"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[v._v("#")]),v._v(" 基础")]),v._v(" "),_("ol",[_("li",[v._v("Go 程序的基本结构？")]),v._v(" "),_("li",[v._v("Go 有哪些关键字？")]),v._v(" "),_("li",[v._v("Go 有哪些数据类型？")]),v._v(" "),_("li",[v._v("Go 方法与函数的区别？")]),v._v(" "),_("li",[v._v("Go 方法值接收者和指针接收者的区别?")]),v._v(" "),_("li",[v._v("Go 函数返回局部变量的指针是否安全?")]),v._v(" "),_("li",[v._v("Go 函数参数传递到底是值传递还是引用传递？")]),v._v(" "),_("li",[v._v("Go defer 关键字的实现原理？")]),v._v(" "),_("li",[v._v("Go 内置函数 make 和 new 的区别？")])]),v._v(" "),_("h3",{attrs:{id:"slice"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[v._v("#")]),v._v(" Slice")]),v._v(" "),_("ol",[_("li",[v._v("Go slice 的底层实现原理")]),v._v(" "),_("li",[v._v("Go array 和 slice 的区别")]),v._v(" "),_("li",[v._v("Go slice 深拷贝和浅拷贝")]),v._v(" "),_("li",[v._v("Go slice 扩容机制？")]),v._v(" "),_("li",[v._v("Go slice 为什么不是线程安全的？")])]),v._v(" "),_("h3",{attrs:{id:"map"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[v._v("#")]),v._v(" Map")]),v._v(" "),_("ol",[_("li",[v._v("Go map 的底层实现原理")]),v._v(" "),_("li",[v._v("Go map 遍历为什么是无序的？")]),v._v(" "),_("li",[v._v("Go map 为什么是非线程安全的？")]),v._v(" "),_("li",[v._v("Go map 如何查找？")]),v._v(" "),_("li",[v._v("Go map 冲突的解决方式？")]),v._v(" "),_("li",[v._v("Go map 的负载因子为什么是 6.5？")]),v._v(" "),_("li",[v._v("Go map 如何扩容?")]),v._v(" "),_("li",[v._v("Go map 和 sync.Map 谁的性能好，为什么？")])]),v._v(" "),_("h3",{attrs:{id:"channel"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#channel"}},[v._v("#")]),v._v(" Channel")]),v._v(" "),_("ol",[_("li",[v._v("Go channel 的底层实现原理？")]),v._v(" "),_("li",[v._v("Go channel 有什么特点？")]),v._v(" "),_("li",[v._v("Go channel 有无缓冲的区别？")]),v._v(" "),_("li",[v._v("Go channel 为什么是线程安全的？")]),v._v(" "),_("li",[v._v("Go channel 如何控制 goroutine 并发执行顺序？")]),v._v(" "),_("li",[v._v("Go channel 共享内存有什么优劣势？")]),v._v(" "),_("li",[v._v("Go channel 发送和接收什么情况下会死锁？")])]),v._v(" "),_("h3",{attrs:{id:"mutex"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mutex"}},[v._v("#")]),v._v(" Mutex")]),v._v(" "),_("ol",[_("li",[v._v("Go 互斥锁的实现原理？")]),v._v(" "),_("li",[v._v("Go 互斥锁正常模式和饥饿模式的区别？")]),v._v(" "),_("li",[v._v("Go 互斥锁允许自旋的条件？")]),v._v(" "),_("li",[v._v("Go 读写锁的实现原理？")]),v._v(" "),_("li",[v._v("Go 可重入锁如何实现？")]),v._v(" "),_("li",[v._v("Go 原子操作有哪些？")]),v._v(" "),_("li",[v._v("Go 原子操作和锁的区别？")])]),v._v(" "),_("h3",{attrs:{id:"goroutine"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#goroutine"}},[v._v("#")]),v._v(" Goroutine")]),v._v(" "),_("ol",[_("li",[v._v("Go goroutine 的底层实现原理？")]),v._v(" "),_("li",[v._v("Go goroutine 和线程的区别?")]),v._v(" "),_("li",[v._v("Go goroutine 泄露的场景?")]),v._v(" "),_("li",[v._v("Go 如何查看正在执行的 goroutine 数量?")]),v._v(" "),_("li",[v._v("Go 如何控制并发的 goroutine 数量?")])]),v._v(" "),_("h3",{attrs:{id:"调度模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#调度模型"}},[v._v("#")]),v._v(" 调度模型")]),v._v(" "),_("ol",[_("li",[v._v("Go 线程实现模型？")]),v._v(" "),_("li",[v._v("Go GMP 和 GM 模型？")]),v._v(" "),_("li",[v._v("Go 调度原理？")]),v._v(" "),_("li",[v._v("Go work stealing 机制？")]),v._v(" "),_("li",[v._v("Go hand off 机制？")]),v._v(" "),_("li",[v._v("Go 抢占式调度？")]),v._v(" "),_("li",[v._v("Go 如何查看运行时调度信息？")])]),v._v(" "),_("h3",{attrs:{id:"内存管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[v._v("#")]),v._v(" 内存管理")]),v._v(" "),_("ol",[_("li",[v._v("Go 内存分配机制？")]),v._v(" "),_("li",[v._v("Go 内存逃逸机制？")]),v._v(" "),_("li",[v._v("Go 内存对齐机制？")]),v._v(" "),_("li",[v._v("Go GC 实现原理？")]),v._v(" "),_("li",[v._v("Go GC 如何调优？")]),v._v(" "),_("li",[v._v("Go 如何查看 GC 信息？")])]),v._v(" "),_("h3",{attrs:{id:"并发编程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#并发编程"}},[v._v("#")]),v._v(" 并发编程")]),v._v(" "),_("ol",[_("li",[v._v("Go 常用的并发模型？")]),v._v(" "),_("li",[v._v("Go 有哪些并发同步原语？")]),v._v(" "),_("li",[v._v("Go WaitGroup 实现原理？")]),v._v(" "),_("li",[v._v("Go Cond 实现原理?")]),v._v(" "),_("li",[v._v("Go 有哪些方式安全读写共享变量？")]),v._v(" "),_("li",[v._v("Go 如何排查数据竞争问题？")])])])}),[],!1,null,null,null);_.default=i.exports}}]);