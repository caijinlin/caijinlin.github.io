(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{371:function(_,a,t){"use strict";t.r(a);var v=t(14),s=Object(v.a)({},(function(){var _=this,a=_._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("blockquote",[a("p",[_._v("<<从0开始学架构>> 学习笔记Day12：高可用架构模式-FMEA方法排除架构可用性隐患")])]),_._v(" "),a("p",[_._v("FMEA方法论：")]),_._v(" "),a("ul",[a("li",[_._v("给出初始的架构设计图")]),_._v(" "),a("li",[_._v("假设架构中某个部件发生故障")]),_._v(" "),a("li",[_._v("分析此故障对系统功能造成的影响")]),_._v(" "),a("li",[_._v("根据分析结果，判断架构是否需要进行优化")])]),_._v(" "),a("p",[_._v("分析过程如下：")]),_._v(" "),a("h3",{attrs:{id:"_1-功能点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-功能点"}},[_._v("#")]),_._v(" 1.功能点")]),_._v(" "),a("p",[_._v("这里的“功能点”指的是从用户角度来看的，而不是从系统各个模块功能点划分来看的。例如，对于一个用户管理系统，使用 FMEA 分析时 “登录”“注册”才是功能点")]),_._v(" "),a("h3",{attrs:{id:"_2-故障模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-故障模式"}},[_._v("#")]),_._v(" 2.故障模式")]),_._v(" "),a("p",[_._v("故障模式指的是系统会出现什么样的故障，包括故障点和故障形式。需要特别注意的是，这里的故障模式并不需要给出真正的故障原因，我们只需要假设出现某种故障现象即可，例如 MySQL 响应时间达到 3 秒。造成 MySQL 响应时间达到 3 秒可能的原因很多：磁盘坏道、慢查询、服务器到 MySQL 的连接网络故障、MySQL bug 等")]),_._v(" "),a("h3",{attrs:{id:"_3-故障影响"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-故障影响"}},[_._v("#")]),_._v(" 3.故障影响")]),_._v(" "),a("p",[_._v("当发生故障模式中描述的故障时，功能点具体会受到什么影响。常见的影响有：功能点偶尔不可用、功能点完全不可用、部分用户功能点不可用、功能点响应缓慢、功能点出错等。")]),_._v(" "),a("h3",{attrs:{id:"_4-严重程度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-严重程度"}},[_._v("#")]),_._v(" 4.严重程度")]),_._v(" "),a("p",[_._v("严重程度指站在业务的角度故障的影响程度，一般分为“致命 / 高 / 中 / 低 / 无”五个档次。严重程度按照这个公式进行评估：严重程度 = 功能点重要程度 × 故障影响范围 × 功能点受损程度")]),_._v(" "),a("h3",{attrs:{id:"_5-故障原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-故障原因"}},[_._v("#")]),_._v(" 5.故障原因")]),_._v(" "),a("p",[_._v("“故障模式”中只描述了故障的现象，描述故障模式对应的故障原因")]),_._v(" "),a("h3",{attrs:{id:"_6-故障概率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-故障概率"}},[_._v("#")]),_._v(" 6.故障概率")]),_._v(" "),a("p",[_._v("这里的概率就是指某个具体故障原因发生的概率。例如，磁盘坏道的概率、MySQL bug 的概率、没有索引的概率。")]),_._v(" "),a("h3",{attrs:{id:"_7-风险程度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-风险程度"}},[_._v("#")]),_._v(" 7.风险程度")]),_._v(" "),a("p",[_._v("风险程度就是综合严重程度和故障概率来一起判断某个故障的最终等级，风险程度 = 严重程度 × 故障概率")]),_._v(" "),a("h3",{attrs:{id:"_8-已有措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-已有措施"}},[_._v("#")]),_._v(" 8.已有措施")]),_._v(" "),a("p",[_._v("针对具体的故障原因，系统现在是否提供了某些措施来应对，包括：检测告警、容错、自恢复等。")]),_._v(" "),a("h3",{attrs:{id:"_9-规避措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-规避措施"}},[_._v("#")]),_._v(" 9.规避措施")]),_._v(" "),a("p",[_._v("规避措施指为了降低故障发生概率而做的一些事情，可以是技术手段，也可以是管理手段。例如：技术手段：为了避免新引入的 MongoDB 丢失数据，在 MySQL 中冗余一份。管理手段：为了降低磁盘坏道的概率，强制统一更换服务时间超过 2 年的磁盘")]),_._v(" "),a("h3",{attrs:{id:"_10-解决措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-解决措施"}},[_._v("#")]),_._v(" 10.解决措施")]),_._v(" "),a("p",[_._v("解决措施指为了能够解决问题而做的一些事情，一般都是技术手段。例如：")]),_._v(" "),a("ul",[a("li",[_._v("为了解决密码暴力破解，增加密码重试次数限制。")]),_._v(" "),a("li",[_._v("为了解决拖库导致数据泄露，将数据库中的敏感数据加密保存。")]),_._v(" "),a("li",[_._v("为了解决非法访问，增加白名单控制。")])]),_._v(" "),a("h3",{attrs:{id:"_11-后续规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-后续规划"}},[_._v("#")]),_._v(" 11.后续规划")]),_._v(" "),a("p",[_._v("综合前面的分析，就可以看出哪些故障我们目前还缺乏对应的措施，哪些已有措施还不够，针对这些不足的地方，再结合风险程度进行排序，给出后续的改进规划。这些规划既可以是技术手段，也可以是管理手段；可以是规避措施，也可以是解决措施。同时需要考虑资源的投入情况，优先将风险程度高的系统隐患解决。")])])}),[],!1,null,null,null);a.default=s.exports}}]);