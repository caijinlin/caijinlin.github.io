(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{353:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"算法介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法介绍"}},[t._v("#")]),t._v(" 算法介绍")]),t._v(" "),s("p",[s("em",[t._v("自适应大邻域搜索")]),t._v("算法（Adaptive Large Neighborhood Search），简称（ALNS），是由Ropke与Pisinger在2006年提出的一种启发式方法，其在邻域搜索的基础上增加了对算子的作用效果的衡量，使算法能够自动选择好的算子对解进行破坏与修复，从而有一定几率得到更好的解。")]),t._v(" "),s("h2",{attrs:{id:"应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),s("p",[t._v("1.外卖场景：搜索订单分配骑手的最优方案")]),t._v(" "),s("p",[t._v("2.派单场景：搜索订单分配司机的最优方案")]),t._v(" "),s("p",[t._v("3.车辆路径规划问题")]),t._v(" "),s("h2",{attrs:{id:"同类算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同类算法"}},[t._v("#")]),t._v(" 同类算法")]),t._v(" "),s("p",[t._v("在邻域搜索算法中，有的算法可以只使用一种邻域，如"),s("strong",[t._v("模拟退火算法")]),t._v("，因此它仅仅搜索了解空间的一小部分，找到全局最优的概率较小，它的优势之一是可以避免陷入局部最优；")]),t._v(" "),s("p",[t._v("而有的算法可以使用多种算子，如"),s("strong",[t._v("变邻域搜索算法")]),t._v("（VNS），它通过在当前解的多个邻域中寻找更满意的解，能够大大提高算法在解空间的搜索范围，但是它在使用算子时盲目地将每种算子形成的邻域结构都搜索一遍，缺少了一些启发式信息的指导；")]),t._v(" "),s("p",[t._v("而"),s("strong",[t._v("自适应大邻域搜索算法")]),t._v("就弥补了这种不足，这种算法根据算子的历史表现与使用次数选择下一次迭代使用的算子，通过算子间的相互竞争来生成当前解的邻域结构，而在这种结构中有很大概率能够找到更好的解；")]),t._v(" "),s("h2",{attrs:{id:"算法流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法流程"}},[t._v("#")]),t._v(" 算法流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/alns_demo.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 生成初始解，当前解X0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 初始解，最优解X1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" X0\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 重复以下步骤进行迭代直到停止准则\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v(" 根据算子权重选择破坏与修复算子，并更新算子使用次数\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v(" 破坏算子和修复算子依次对当前解操作得到新解X2\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),t._v(" 更新当前解 \n\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，则X0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" X2\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，则以一定的概率接受该解作为当前解\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.4")]),t._v(" 更新最优解 \n\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("X1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，则X1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" X2\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.5")]),t._v(" 更新算子的分数\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(" 更新算子的权重\n\n   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7")]),t._v(" 重置当前解\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 返回最优解X1\n")])])]),s("p",[t._v("每次迭代就是从初始解中删除N个点，然后依次将删除的点重新插入，得到一个新的解，即当前解的邻域解；重复上述迭代过程，得到一个成本（cost）最低的一个解，即最优解。")]),t._v(" "),s("p",[s("strong",[t._v("ALNS会为每个destroy和repair算子分配一个权重，通过该权重从而控制每个destroy和repair算子在搜索期间使用的频率。")]),t._v(" 在搜索的过程中，"),s("strong",[t._v("ALNS")]),t._v("会对各个destroy和repair方法的权重进行"),s("strong",[t._v("动态调整")]),t._v("，以便获得更好的邻域和解。")]),t._v(" "),s("p",[s("strong",[t._v("ALNS通过使用多种destroy和repair算子，然后再根据这些destroy和repair算子生成的解的质量，选择那些表现好的destroy和repair算子，再次生成邻域进行搜索")])]),t._v(" "),s("h2",{attrs:{id:"算法实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法实现"}},[t._v("#")]),t._v(" 算法实现")]),t._v(" "),s("p",[t._v("算法本身由算法参数、当前解、状态管理器、算子管理器、最优解管理器组成")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/AlnsProccess.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"算法参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法参数"}},[t._v("#")]),t._v(" 算法参数")]),t._v(" "),s("blockquote",[s("p",[t._v("算法执行过程中一些初始化参数")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Parameters "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    MaxExecTime          "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"max_exec_time"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最长执行时间（单位s）")]),t._v("\n    TimeSegmentsIt       "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"time_segments_iteration"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新计算权重迭代次数")]),t._v("\n    ReloadFrequency      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"reload_frequency"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置当前解的迭代次数")]),t._v("\n    Sigma1               "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"sigma1"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 算子提升最优解 增加分数")]),t._v("\n    Sigma2               "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"sigma2"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 算子提升当前解 增加分数")]),t._v("\n    Sigma3               "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"sigma3"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 算子更新当前解 增加分数")]),t._v("\n    Rho                  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"rho"`')]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新计算算子权重的系数")]),t._v("\n    MinimumWeight        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"min_weight"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小权重值")]),t._v("\n    MaximumWeight        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"max_weight"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大权重值")]),t._v("\n    MaxTemperature       "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"max_temperature"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大温度")]),t._v("\n    MinTemperature       "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"min_temperature"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最小温度")]),t._v("\n    TemperatureAlpha     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"temperature_alpha"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降温系数")]),t._v("\n    MaxNoImproveRatio    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"max_no_improve_ratio"`')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最大没有提升解的迭代次数占比（超过停止）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("最大温度 * math.pow(降温系数, n) < 最小温度，max(n)即为"),s("strong",[t._v("最大迭代次数")]),t._v("，超过最大迭代次数停止")]),t._v(" "),s("p",[t._v("最大迭代次数 * MaxNoImproveRatio = 最大无改善最优解的迭代次数，超过最大无改善最优解的迭代次数停止")]),t._v(" "),s("p",[t._v("超过最长执行时间停止")]),t._v(" "),s("h3",{attrs:{id:"状态管理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#状态管理器"}},[t._v("#")]),t._v(" 状态管理器")]),t._v(" "),s("blockquote",[s("p",[t._v("管理计数的状态变量")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Status "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 迭代次数：Id of the iteration corresponding to this status.")]),t._v("\n\tIterationId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 迭代次数中得到可行解的迭代次数：Number of iteration solution avaliable")]),t._v("\n\tNIterationAvaliable "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 距离上一次改善最优解的迭代次数：Number of iteration since the last improvement of the BKS")]),t._v("\n\tNIterationWithoutImprovement "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 距离上一次重置当前解后改善最优解的迭代次数：Number of iteration since the last improvement of the BKS")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or the last reload of the best known solution.")]),t._v("\n\tNIterationWithoutImprovementSinceLastReload "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有改善当前解的迭代次数： Number of iterations since the last improvement of the current")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// solution.")]),t._v("\n\tNIterationWithoutImprovementCurrent "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有更新当前解的迭代次数：Number of iterations without transition.")]),t._v("\n\tNIterationWithoutTransition "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置当前解的迭代次数：Number of iterations with reload current solution")]),t._v("\n\tNIterationReloadCurrent "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新最优解的迭代次数：Number of iterations with update best solution")]),t._v("\n\tNIterationUpdateBest "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新算子权重的迭代次数：Number of iterations with recopute weights")]),t._v("\n\tNIterationRecomputeWeights "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前解是否是最优解： Indicate if a new best solution has been obtained.")]),t._v("\n\tNewBestSolution "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否更新了当前解：Indicate if the new solution has been accepted as the")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// current solution.")]),t._v("\n\tAcceptedAsCurrentSolution "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否提升了当前解：Indicate if the new solution improve the current solution.")]),t._v("\n\tImproveCurrentSolution "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"最优解管理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最优解管理器"}},[t._v("#")]),t._v(" 最优解管理器")]),t._v(" "),s("blockquote",[s("p",[t._v("管理最优解")])]),t._v(" "),s("p",[t._v("更新最优解")]),t._v(" "),s("p",[t._v("获取最优解")]),t._v(" "),s("h3",{attrs:{id:"算子管理器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算子管理器"}},[t._v("#")]),t._v(" 算子管理器")]),t._v(" "),s("blockquote",[s("p",[t._v("算子管理类，提供如下接口")])]),t._v(" "),s("p",[t._v("添加摧毁算子")]),t._v(" "),s("p",[t._v("添加修复算子")]),t._v(" "),s("p",[t._v("选择摧毁算子")]),t._v(" "),s("p",[t._v("选择修复算子")]),t._v(" "),s("p",[t._v("更新算子分数")]),t._v(" "),s("p",[t._v("更新算子权重")]),t._v(" "),s("p",[t._v("更新算子调用次数")]),t._v(" "),s("h3",{attrs:{id:"选择算子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择算子"}},[t._v("#")]),t._v(" 选择算子")]),t._v(" "),s("p",[t._v("算子管理器根据算子权重选择破坏算子与修复算子")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("OperatorManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectOperator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vecOp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("IOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sumW "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" IOperator "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\trandomVal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\trandomWeightPos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" randomVal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" sumW\n\tcumulSum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcumulSum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" vecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cumulSum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" randomWeightPos "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("noise "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tvecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetNoise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tvecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnsetNoise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\tvecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IncreaseNumberOfCalls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新算子使用次数")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vecOp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"获取邻域解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取邻域解"}},[t._v("#")]),t._v(" 获取邻域解")]),t._v(" "),s("p",[t._v("先使用破坏算子进行删除，然后使用修复算子将删除的进行添加")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("func (s *AlnsProcess) generateNeighborSolution(repair IRepairOperator, destroy IDestroyOperator) *alg.Solution {\n\t// 从局部最优中生成新解\n\tneighbor := s.currentSolution.CopySolution()\n\t// destroy solution\n\tremoveJobs := destroy.DestroySolution(neighbor)\n\t// repair solution\n\trepair.RepairSolution(neighbor, removeJobs)\n\n\treturn neighbor\n}\n")])])]),s("h3",{attrs:{id:"更新当前解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新当前解"}},[t._v("#")]),t._v(" 更新当前解")]),t._v(" "),s("p",[t._v("新解 < 当前解，一定接受")]),t._v(" "),s("p",[t._v("新解 > 当前解，根据温度与成本变化值随机接受")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Acceptance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TransitionAccepted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currentSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("alg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Solution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 降温")]),t._v("\n\ta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TemperatureAlpha\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" newSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" currentSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tdifference "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" newSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" currentSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost\n\t\trandom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Exp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("difference"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("temperature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" random\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"更新最优解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新最优解"}},[t._v("#")]),t._v(" 更新最优解")]),t._v(" "),s("p",[t._v("新解 < 最优解，一定接受")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("AlnsProcess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateBestSoution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newSol "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("alg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Solution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbestSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bestSolManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBestSolution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\taccept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" newSol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" bestSolution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SolutionCost "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\taccept "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" accept "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bestSolManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddNewBestSolution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newSol"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NewBestSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TRUE\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nIterationsWithoutImprovement\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovementSinceLastReload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationUpdateBest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NewBestSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FALSE\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nIterationsWithoutImprovement\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovementSinceLastReload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"更新算子的分数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新算子的分数"}},[t._v("#")]),t._v(" 更新算子的分数")]),t._v(" "),s("blockquote",[s("p",[t._v("根据新解的质量，给当前使用算子加上不同的分数")])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("OperatorManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UpdateScores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("des IDestroyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rep IRepairOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新解是最优解")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NewBestSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TRUE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tdes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("des"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithoutNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新解改善了当前解")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ImproveCurrentSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TRUE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tdes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("des"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithoutNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新解更新了当前解")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ImproveCurrentSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" FALSE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n\t\tstatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AcceptedAsCurrentSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TRUE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n\t\tstatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("AlreadyKnownSolution "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" FALSE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\trep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tdes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("des"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Sigma3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithoutNoise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Noise "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tperformanceRepairOperatorsGlobal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n\t\tperformanceRepairOperatorsGlobal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithNoise\n\t\tperformanceRepairOperatorsGlobal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("perfRepairOperatorsWithoutNoise\n\n\t\trandomVal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\trandomWeightPos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" randomVal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" performanceRepairOperatorsGlobal\n\t\tm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("noise "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("randomWeightPos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" performanceRepairOperatorsGlobal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"更新算子的权重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新算子的权重"}},[t._v("#")]),t._v(" 更新算子的权重")]),t._v(" "),s("p",[t._v("每迭代TimeSegmentsIt次，更新所有算子的权重，新的权重和算子分数、算子调用次数等有关")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("OperatorManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("recomputeWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op IOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sumW "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tprevWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sumW "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" prevWeight\n\n\tcurrentScore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tnbCalls "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" op"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetNumberOfCallsSinceLastEvaluation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tnewWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rho"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("prevWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Rho"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nbCalls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TimeSegmentsIt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("currentScore\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We ensure that the weight is within the bounds.")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" newWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaximumWeight "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnewWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MaximumWeight\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" newWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinimumWeight "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnewWeight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MinimumWeight\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sumW "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" newWeight\n\top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("SetWeight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newWeight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ResetScore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ResetNumberOfCalls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"重置当前解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重置当前解"}},[t._v("#")]),t._v(" 重置当前解")]),t._v(" "),s("p",[t._v("每迭代 ReloadFrequency 次，重置当前解")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置当前解（防止陷入局部最优解）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("AlnsProcess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reloadCurrentSolution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("alg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Solution "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovementSinceLastReload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovementSinceLastReload"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReloadFrequency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationWithoutImprovementSinceLastReload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\ts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NIterationReloadCurrent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bestSolManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBestSolution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CopySolution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentSolution\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("https://cloud.tencent.com/developer/article/1523308")])])}),[],!1,null,null,null);s.default=e.exports}}]);